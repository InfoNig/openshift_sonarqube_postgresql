kind: Template
apiVersion: v1
metadata:
  annotations:
    description: The SonarQube OpenShift template
    tags: sonarqube
  name: sonarqube-ephemeral
message: "Login to SonarQube with the default admin user: admin/admin"
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: sonarqube-ephemeral
    labels:
      app: sonarqube
  spec:
    ports:
    - name: sonarqube-ephemeral
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      deploymentconfig: sonarqube-ephemeral
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      description: Route for SonarQube's http service.
    name: sonarqube-ephemeral
    labels:
      app: sonarqube
  spec:
    to:
      kind: Service
      name: sonarqube-ephemeral
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app:sonarqube
    name: sonarqube-ephemeral
  spec:
    replicas: 1
    selector:
      app: sonarqube
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: sonarqube
      spec:
        containers:
        - env:
          - name: SONARQUBE_JDBC_URL
            value: jdbc:postgresql://postgresql-sonarqube/${POSTGRESQL_DB}
          - name: SONARQUBE_JDBC_USERNAME
            value: ${POSTGRESQL_USER}
          - name: SONARQUBE_JDBC_PASSWORD
            value: ${POSTGRESQL_PASSWORD}
          image: harborone.ultraapp.com/openshift3/sonarqube:7.0
          imagePullPolicy: IfNotPresent
          name: sonarqube-ephemeral
          ports:
          - containerPort: 9000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: postgresql-sonarqube
    labels:
      app: pgsql
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: pgsql
      deploymentconfig: postgresql-sonarqube
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: pgsql
      deploymentconfig: postgresql-sonarqube
    name: postgresql-sonarqube
  spec:
    replicas: 1
    selector:
      app: pgsql
      deploymentconfig: postgresql-sonarqube
    strategy:
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: pgsql
          deploymentconfig: postgresql-sonarqube
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: ${POSTGRESQL_USER}
          - name: POSTGRES_PASSWORD
            value: ${POSTGRESQL_PASSWORD}
          - name: POSTGRES_DB
            value: ${POSTGRESQL_DB}
          image: postgres:10.2
          imagePullPolicy: IfNotPresent
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRES_USER -q -d $POSTGRES_DB -c 'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: postgresql-data
    test: false
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: postgresql-sonarqube-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${POSTGRESQL_VOLUME_CAPACITY}
parameters:
- displayName: SonarQube version
  value: "7.0"
  name: SONARQUBE_VERSION
  required: true
- description: Password for SonarQube Server PostgreSQL backend
  displayName: SonarQube's PostgreSQL Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: POSTGRESQL_PASSWORD
  required: true
- description: DB for SonarQube Server PostgreSQL backend
  displayName: SonarQube's PostgreSQL DB
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: POSTGRESQL_DB
- description: Volume space available for PostgreSQL
  displayName: PostgreSQL Volume Capacity
  name: POSTGRESQL_VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: USER for SonarQube Server PostgreSQL backend
  displayName: SonarQube's PostgreSQL USER
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: POSTGRESQL_USER

